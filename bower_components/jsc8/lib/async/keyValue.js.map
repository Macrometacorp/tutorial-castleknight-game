{"version":3,"file":"keyValue.js","sourceRoot":"","sources":["../../src/keyValue.ts"],"names":[],"mappings":";;AAQA;IAII,YAAY,UAAsB,EAAE,IAAY;QAC5C,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,cAAc;QACV,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAC3B;YACI,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,UAAU;SACnB,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CACpB,CAAC;IACN,CAAC;IAED,UAAU;QACN,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAC3B;YACI,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,YAAY,IAAI,CAAC,IAAI,QAAQ;SACtC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CACpB,CAAC;IACN,CAAC;IAED,SAAS,CAAC,OAAY,EAAE;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAC3B;YACI,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,YAAY,IAAI,CAAC,IAAI,OAAO;YAClC,EAAE,oBAAO,IAAI,CAAE;SAClB,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CACpB,CAAC;IACN,CAAC;IAED,cAAc,CAAC,GAAW;QACtB,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAC3B;YACI,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,YAAY,IAAI,CAAC,IAAI,UAAU,GAAG,EAAE;SAC7C,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CACpB,CAAC;IACN,CAAC;IAED,gBAAgB,CAAC,aAAsB,KAAK;QACxC,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAC3B;YACI,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,YAAY,IAAI,CAAC,IAAI,EAAE;YAC7B,EAAE,EAAE;gBACA,UAAU;aACb;SACJ,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CACpB,CAAC;IACN,CAAC;IAED,gBAAgB;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAC3B;YACI,MAAM,EAAE,QAAQ;YAChB,IAAI,EAAE,YAAY,IAAI,CAAC,IAAI,EAAE;SAChC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CACpB,CAAC;IACN,CAAC;IAED,iBAAiB,CAAC,GAAW;QACzB,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAC3B;YACI,MAAM,EAAE,QAAQ;YAChB,IAAI,EAAE,YAAY,IAAI,CAAC,IAAI,UAAU,GAAG,EAAE;SAC7C,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CACpB,CAAC;IACN,CAAC;IAED,kBAAkB,CAAC,IAAc;QAC7B,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAC3B;YACI,MAAM,EAAE,QAAQ;YAChB,IAAI,EAAE,YAAY,IAAI,CAAC,IAAI,SAAS;YACpC,IAAI,EAAE,IAAI;SACb,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CACpB,CAAC;IACN,CAAC;IAED,aAAa,CAAC,aAA6B;QACvC,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAC3B;YACI,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,YAAY,IAAI,CAAC,IAAI,QAAQ;YACnC,IAAI,EAAE,aAAa;SACtB,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CACpB,CAAC;IACN,CAAC;CACJ;AAxGD,4BAwGC","sourcesContent":["import { Connection } from \"./connection\";\n\nexport type KVPairHandle = {\n    _key?: string;\n    value: any;\n    expireAt: number;\n}\n\nexport class KeyValue {\n    private _connection: Connection;\n    name: string;\n\n    constructor(connection: Connection, name: string) {\n        this._connection = connection;\n        this.name = name;\n    }\n\n    getCollections() {\n        return this._connection.request(\n            {\n                method: \"GET\",\n                path: \"/_api/kv\",\n            },\n            (res) => res.body\n        );\n    }\n\n    getKVCount() {\n        return this._connection.request(\n            {\n                method: \"GET\",\n                path: `/_api/kv/${this.name}/count`,\n            },\n            (res) => res.body\n        );\n    }\n\n    getKVKeys(opts: any = {}) {\n        return this._connection.request(\n            {\n                method: \"GET\",\n                path: `/_api/kv/${this.name}/keys`,\n                qs: { ...opts }\n            },\n            (res) => res.body\n        );\n    }\n\n    getValueForKey(key: string) {\n        return this._connection.request(\n            {\n                method: \"GET\",\n                path: `/_api/kv/${this.name}/value/${key}`,\n            },\n            (res) => res.body\n        );\n    }\n\n    createCollection(expiration: boolean = false) {\n        return this._connection.request(\n            {\n                method: \"POST\",\n                path: `/_api/kv/${this.name}`,\n                qs: {\n                    expiration\n                },\n            },\n            (res) => res.body\n        );\n    }\n\n    deleteCollection() {\n        return this._connection.request(\n            {\n                method: \"DELETE\",\n                path: `/_api/kv/${this.name}`,\n            },\n            (res) => res.body\n        );\n    }\n\n    deleteEntryForKey(key: string) {\n        return this._connection.request(\n            {\n                method: \"DELETE\",\n                path: `/_api/kv/${this.name}/value/${key}`,\n            },\n            (res) => res.body\n        );\n    }\n\n    deleteEntryForKeys(keys: string[]) {\n        return this._connection.request(\n            {\n                method: \"DELETE\",\n                path: `/_api/kv/${this.name}/values`,\n                body: keys\n            },\n            (res) => res.body\n        );\n    }\n\n    insertKVPairs(keyValuePairs: KVPairHandle[]) {\n        return this._connection.request(\n            {\n                method: \"PUT\",\n                path: `/_api/kv/${this.name}/value`,\n                body: keyValuePairs\n            },\n            (res) => res.body\n        );\n    }\n}\n"]}