{"version":3,"file":"search.js","sourceRoot":"","sources":["../../src/search.ts"],"names":[],"mappings":"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","sourcesContent":["import { Connection } from \"./connection\";\n\nexport type SearchOptions = {\n    viewName?: string;\n    analyzerName?: string;\n};\n\nexport type Properties = {\n    links?: {\n        [collectionName: string]: {\n            analyzers?: [\n                string\n            ],\n            fields?: object,\n            includeAllFields?: boolean,\n            storeValues?: string,\n            trackListPositions?: boolean\n        }\n    }\n}\n\nexport class Search {\n\n    private _connection: Connection;\n    _viewName: string;\n    _analyzerName: string;\n\n    viewUrlPrefix: string = \"/_api/search/view\";\n    analyzerUrlPrefix: string = \"/_api/search/analyzer\";\n\n    constructor(connection: Connection, searchOptions?: SearchOptions) {\n        this._connection = connection;\n        this._viewName = (searchOptions && searchOptions.viewName) || \"\";\n        this._analyzerName = (searchOptions && searchOptions.analyzerName) || \"\";\n    }\n\n    setSearch(collectionName: string, enable: boolean, field: string) {\n        return this._connection.request(\n            {\n                method: \"POST\",\n                path: `/_api/search/collection/${collectionName}`,\n                qs: {\n                    enable,\n                    field\n                },\n                absolutePath: true,\n                body: {}\n            },\n            res => res.body\n        );\n    }\n\n    searchInCollection(collection: string, search: string, bindVars: object = {}, ttl: number = 60) {\n        return this._connection.request(\n            {\n                method: \"POST\",\n                path: \"/_api/search\",\n                body: {\n                    collection,\n                    search,\n                    bindVars,\n                    ttl\n                },\n                absolutePath: true\n            },\n            res => res.body\n        );\n    }\n\n    getListOfViews() {\n        return this._connection.request(\n            {\n                method: \"GET\",\n                path: `${this.viewUrlPrefix}`,\n                absolutePath: true\n            },\n            res => res.body\n        );\n    }\n\n    createView(properties: Properties = {}) {\n        return this._connection.request(\n            {\n                method: \"POST\",\n                path: `${this.viewUrlPrefix}`,\n                body: {\n                    type: \"search\",\n                    name: this._viewName,\n                    properties\n                },\n                absolutePath: true\n            },\n            res => res.body\n        );\n    }\n\n    getViewInfo() {\n        return this._connection.request(\n            {\n                method: \"GET\",\n                path: `${this.viewUrlPrefix}/${this._viewName}`,\n                absolutePath: true\n            },\n            res => res.body\n        );\n    }\n\n    renameView(name: string) {\n        return this._connection.request(\n            {\n                method: \"PUT\",\n                path: `${this.viewUrlPrefix}/${this._viewName}/rename`,\n                absolutePath: true,\n                body: {\n                    name\n                }\n            },\n            res => res.body\n        );\n    }\n\n    deleteView() {\n        return this._connection.request(\n            {\n                method: \"DELETE\",\n                path: `${this.viewUrlPrefix}/${this._viewName}`,\n                absolutePath: true\n            },\n            res => res.body\n        );\n    }\n\n    getViewProperties() {\n        return this._connection.request(\n            {\n                method: \"GET\",\n                path: `${this.viewUrlPrefix}/${this._viewName}/properties`,\n                absolutePath: true\n            },\n            res => res.body\n        );\n    }\n\n    updateViewProperties(properties: Properties) {\n        return this._connection.request(\n            {\n                method: \"PUT\",\n                path: `${this.viewUrlPrefix}/${this._viewName}/properties`,\n                absolutePath: true,\n                body: properties\n            },\n            res => res.body\n        );\n    }\n\n    getListOfAnalyzers() {\n        return this._connection.request(\n            {\n                method: \"GET\",\n                path: `${this.analyzerUrlPrefix}`,\n                absolutePath: true\n            },\n            res => res.body\n        );\n    }\n\n    createAnalyzer(type: string, properties?: object, features?: Array<string>) {\n        return this._connection.request(\n            {\n                method: \"POST\",\n                path: `${this.analyzerUrlPrefix}`,\n                body: {\n                    name: this._analyzerName,\n                    type,\n                    features,\n                    properties\n                },\n                absolutePath: true\n            },\n            res => res.body\n        );\n    }\n    \n    getAnalyzerDefinition() {\n        return this._connection.request(\n            {\n                method: \"GET\",\n                path: `${this.analyzerUrlPrefix}/${this._analyzerName}`,\n                absolutePath: true\n            },\n            res => res.body\n        );\n    }\n\n    deleteAnalyzer(force: boolean = false) {\n        return this._connection.request(\n            {\n                method: \"DELETE\",\n                path: `${this.analyzerUrlPrefix}/${this._analyzerName}`,\n                qs: {\n                    force\n                },\n                absolutePath: true\n            },\n            res => res.body\n        );\n    }\n}\n"]}